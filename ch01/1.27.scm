(define (full-fermat-test n)
  (define (try-it a)
	(= (expmod a n n) a))
  (define (fermat-test a)
	(cond ((= a n) true)
		  ((try-it a) (fermat-test (+ 1 a)))
		  (else false)))
  (fermat-test 2))

(define (fast-prime? n times)
  (cond ((= times 0) true)
		((fermat-test n) (fast-prime? n (- times 1)))
		(else false)))

(define (expmod base exp m)
  (cond ((= exp 0) 1)
		((even? exp)
		 (remainder (square (expmod base (/ exp 2) m))
					m))
		(else
		 (remainder (* base (expmod base (- exp 1) m))
					m))))

(full-fermat-test 561)
(full-fermat-test 1105)
(full-fermat-test 1729)
(full-fermat-test 2465)
(full-fermat-test 2821)
(full-fermat-test 6601)
; cool, all are not primes, but pass the test :)
